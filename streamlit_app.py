# -*- coding: utf-8 -*-
import os, tempfile, pandas as pd, streamlit as st
import order_engine as oe

st.set_page_config(page_title="AI Beer Stock Manager", page_icon="üç∫", layout="wide")
st.title("üç∫ AI Beer Stock Manager ‚Äî Streamlit (XLSX)")
st.caption("–ï–∫—Å–ø–æ—Ä—Ç .xlsx —É –∑—Ä–æ–∑—É–º—ñ–ª–æ–º—É –≤–∏–≥–ª—è–¥—ñ + —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ –±–µ–∑ –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞")

with st.sidebar:
    st.header("‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")
    out_dir = st.text_input("–ü–∞–ø–∫–∞ –¥–ª—è XLSX (OUT_DIR)", value=os.getenv("OUT_DIR", "out"))
    dry_run = st.checkbox("DRY_RUN (—Ç—ñ–ª—å–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ, –±–µ–∑ TG)", value=True)
    tg_token = st.text_input("TELEGRAM_BOT_TOKEN", value=os.getenv("TELEGRAM_BOT_TOKEN", ""), type="password")
    tg_chat  = st.text_input("TELEGRAM_CHAT_ID", value=os.getenv("TELEGRAM_CHAT_ID", "555406850"))

st.subheader("1) –í—Ö—ñ–¥–Ω—ñ —Ñ–∞–π–ª–∏")
c1, c2 = st.columns(2)
with c1:
    stock_file = st.file_uploader("Excel —ñ–∑ –∑–∞–ª–∏—à–∫–∞–º–∏ (export_limits.xlsx / .xls)", type=["xlsx","xls"])
with c2:
    suppliers_file = st.file_uploader("suppliers.csv –∞–±–æ .xlsx/.xls", type=["csv","xlsx","xls"])

col_run, col_send = st.columns(2)
btn_run = col_run.button("üî¢ –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏")
btn_send = col_send.button("üöÄ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤ Telegram")

tmp_dir = tempfile.mkdtemp(prefix="beer_streamlit_")

def save_upload(f, name):
    path = os.path.join(tmp_dir, name)
    with open(path, "wb") as fh: fh.write(f.read())
    return path

if "paths" not in st.session_state:
    st.session_state.paths = {}

def compute_and_show(stock_path, suppliers_path):
    oe.OUT_DIR = out_dir or "out"; os.makedirs(oe.OUT_DIR, exist_ok=True)
    oe.DRY_RUN = 1 if dry_run else 0
    oe.TELEGRAM_BOT_TOKEN = tg_token or ""
    oe.TELEGRAM_CHAT_ID = tg_chat or "555406850"

    po_a, po_b, missing = oe.process_and_send(stock_path, suppliers_path)  # –∑–±–µ—Ä—ñ–≥–∞—î —Ç–∞ (—è–∫—â–æ DRY_RUN=0) —à–ª–µ —É TG
    st.success("–ì–æ—Ç–æ–≤–æ. –§–∞–π–ª–∏ —Å—Ñ–æ—Ä–º–æ–≤–∞–Ω—ñ —É OUT_DIR. –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥ –Ω–∏–∂—á–µ.")

    if not po_a.empty:
        st.subheader("PO ‚Äî –ë–æ–≥–æ–ª—é–±–æ–≤–∞")
        st.dataframe(po_a, use_container_width=True)
        xlsx_a = os.path.join(oe.OUT_DIR, "PO_–ë–æ–≥–æ–ª—é–±–æ–≤–∞.xlsx")
        st.download_button("‚¨áÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ PO_–ë–æ–≥–æ–ª—é–±–æ–≤–∞.xlsx", data=open(xlsx_a, "rb").read(),
                           file_name="PO_–ë–æ–≥–æ–ª—é–±–æ–≤–∞.xlsx")
        st.session_state.paths["a"] = xlsx_a
    else:
        st.info("–î–ª—è –º–∞–≥–∞–∑–∏–Ω—É –ë–æ–≥–æ–ª—é–±–æ–≤–∞ –∑–∞–º–æ–≤–ª–µ–Ω—å –Ω–µ–º–∞—î.")

    if not po_b.empty:
        st.subheader("PO ‚Äî –Ñ–≤—Ä–æ–ø–µ–π—Å—å–∫–∞, 31–∞")
        st.dataframe(po_b, use_container_width=True)
        xlsx_b = os.path.join(oe.OUT_DIR, "PO_–Ñ–≤—Ä–æ–ø–µ–π—Å—å–∫–∞_31–∞.xlsx")
        st.download_button("‚¨áÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ PO_–Ñ–≤—Ä–æ–ø–µ–π—Å—å–∫–∞_31–∞.xlsx", data=open(xlsx_b, "rb").read(),
                           file_name="PO_–Ñ–≤—Ä–æ–ø–µ–π—Å—å–∫–∞_31–∞.xlsx")
        st.session_state.paths["b"] = xlsx_b
    else:
        st.info("–î–ª—è –º–∞–≥–∞–∑–∏–Ω—É –Ñ–≤—Ä–æ–ø–µ–π—Å—å–∫–∞, 31–∞ –∑–∞–º–æ–≤–ª–µ–Ω—å –Ω–µ–º–∞—î.")

    st.subheader("–¢–æ–≤–∞—Ä–∏ –±–µ–∑ –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞")
    if missing.empty:
        st.success("–í—Å—ñ —Ç–æ–≤–∞—Ä–∏ –º–∞—é—Ç—å –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞ ‚úÖ")
    else:
        st.warning("–Ñ —Ç–æ–≤–∞—Ä–∏ –±–µ–∑ –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞ ‚Äî –¥–æ–ø–æ–≤–Ω—ñ—Ç—å —É suppliers.csv")
        st.dataframe(missing, use_container_width=True)
        xlsx_m = os.path.join(oe.OUT_DIR, "MISSING_SUPPLIERS.xlsx")
        st.download_button("‚¨áÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ MISSING_SUPPLIERS.xlsx", data=open(xlsx_m, "rb").read(),
                           file_name="MISSING_SUPPLIERS.xlsx")
        st.session_state.paths["m"] = xlsx_m

if btn_run:
    if not stock_file:
        st.error("–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ Excel —ñ–∑ –∑–∞–ª–∏—à–∫–∞–º–∏.")
    elif not suppliers_file:
        st.error("–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ suppliers.csv/.xlsx.")
    else:
        stock_path = save_upload(stock_file, stock_file.name)
        suppliers_path = save_upload(suppliers_file, suppliers_file.name)
        try:
            compute_and_show(stock_path, suppliers_path)
        except Exception as e:
            st.exception(e)

if btn_send:
    if not st.session_state.get("paths"):
        st.warning("–°–ø–µ—Ä—à—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´–†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏¬ª.")
    else:
        oe.DRY_RUN = 1 if dry_run else 0
        oe.TELEGRAM_BOT_TOKEN = tg_token or ""
        oe.TELEGRAM_CHAT_ID = tg_chat or "555406850"
        from order_engine import tg_send_message, tg_send_document
        tg_send_message("<b>AI Beer Stock Manager</b>\n–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Å—Ñ–æ—Ä–º–æ–≤–∞–Ω–∏—Ö XLSX.")
        for key in ["a", "b", "m"]:
            p = st.session_state.paths.get(key)
            if p and os.path.exists(p):
                tg_send_document(p, caption=f"<code>{os.path.basename(p)}</code>")
        if dry_run:
            st.info("DRY_RUN=1 ‚Äî –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ª–∏—à–µ —É –ª–æ–≥–∞—Ö.")
        else:
            st.success("–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram.")
